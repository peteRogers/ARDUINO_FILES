#include "displayManager.h"

const uint8_t frame0[] PROGMEM = {
  1, 125, 3,  2, 122, 6,  3, 120, 8,  4, 117, 8,  5, 115, 8,  6, 113, 7,  7, 110, 8,  8, 108, 8,  9, 105, 8,  10, 37, 10,  10, 70, 11,  10, 102, 9,  11, 34, 17,  11, 67, 41,  12, 32, 23,  12, 65, 40,  13, 31, 6,  13, 47, 11,  13, 63, 7,  13, 81, 21,  14, 30, 4,  14, 51, 10,  14, 62, 5,  15, 29, 4,  15, 55, 11,  16, 28, 4,  16, 58, 7,  17, 28, 3,  17, 60, 4,  18, 27, 4,  18, 60, 3,  19, 27, 3,  19, 59, 3,  20, 27, 3,  20, 58, 4,  21, 27, 3,  21, 58, 3,  22, 27, 4,  22, 58, 3,  23, 28, 4,  23, 57, 3,  24, 29, 4,  24, 57, 3,  25, 30, 5,  25, 57, 3,  26, 31, 21,  26, 57, 3,  27, 33, 27,  28, 35, 25,  29, 52, 9,  30, 58, 4,  31, 59, 4,  32, 60, 4,  32, 120, 8,  33, 60, 5,  33, 111, 17,  34, 62, 5,  34, 107, 21,  35, 63, 6,  35, 104, 24,  36, 65, 7,  36, 100, 24,  37, 51, 8,  37, 64, 11,  37, 97, 21,  38, 48, 31,  38, 94, 20,  39, 46, 65,  40, 44, 7,  40, 59, 6,  40, 74, 34,  41, 42, 7,  41, 61, 3,  41, 77, 28,  42, 39, 8,  42, 61, 3,  42, 86, 13,  43, 37, 8,  43, 60, 3,  44, 36, 6,  44, 60, 3,  45, 35, 5,  45, 60, 3,  46, 35, 3,  46, 59, 3,  47, 34, 3,  47, 59, 3,  48, 34, 3,  48, 59, 3,  49, 34, 3,  49, 58, 3,  50, 35, 3,  50, 58, 3,  51, 35, 3,  51, 55, 6,  52, 35, 4,  52, 53, 7,  53, 36, 4,  53, 51, 10,  54, 37, 5,  54, 48, 8,  54, 58, 4,  55, 38, 15,  55, 59, 4,  56, 39, 12,  56, 60, 5,  57, 42, 7,  57, 61, 6,  58, 63, 5,  59, 64, 5,  60, 66, 4,  61, 67, 4,  62, 68, 4,  63, 69, 4,  255 // End of data marker
};
void displayFrame0() {
display.clearDisplay();
 for (uint16_t i = 0; i < sizeof(frame0); i += 3) {
uint8_t y = pgm_read_byte(&frame0[i]);
if (y == 255) {break;} // End of data marker
uint8_t startX = pgm_read_byte(&frame0[i + 1]);
uint8_t endX = pgm_read_byte(&frame0[i + 2]);
display.drawFastHLine(startX, y, endX, SSD1306_WHITE);
}
display.display(); // Send the buffer to the OLED
}

const uint8_t frame1[] PROGMEM = {
  3, 125, 3,  4, 121, 7,  5, 118, 10,  6, 80, 7,  6, 113, 12,  7, 77, 45,  8, 76, 42,  9, 74, 6,  9, 88, 24,  10, 73, 5,  11, 72, 5,  12, 71, 4,  13, 70, 4,  14, 39, 10,  14, 69, 4,  15, 35, 17,  15, 68, 4,  16, 33, 21,  16, 68, 3,  17, 32, 7,  17, 49, 6,  17, 67, 3,  18, 31, 4,  18, 51, 7,  18, 63, 2,  18, 66, 4,  19, 30, 4,  19, 53, 16,  20, 29, 4,  20, 55, 13,  21, 29, 3,  21, 58, 5,  21, 65, 3,  22, 29, 3,  22, 64, 3,  23, 29, 3,  23, 64, 3,  24, 28, 3,  24, 64, 3,  25, 28, 3,  25, 64, 3,  26, 29, 3,  26, 64, 3,  27, 29, 4,  27, 64, 3,  28, 30, 4,  28, 64, 3,  29, 31, 5,  29, 64, 3,  30, 32, 7,  30, 60, 8,  31, 33, 10,  31, 56, 13,  32, 36, 10,  32, 54, 16,  32, 119, 9,  33, 39, 21,  33, 66, 5,  33, 111, 17,  34, 42, 15,  34, 67, 5,  34, 104, 24,  35, 46, 8,  35, 69, 5,  35, 97, 21,  36, 70, 6,  36, 84, 27,  37, 72, 32,  38, 73, 24,  39, 74, 10,  40, 39, 39,  41, 36, 41,  42, 33, 44,  43, 32, 7,  43, 73, 3,  44, 31, 5,  44, 72, 4,  45, 30, 4,  45, 72, 3,  46, 29, 4,  46, 72, 3,  47, 29, 3,  47, 71, 3,  48, 29, 2,  48, 71, 3,  49, 28, 3,  49, 71, 3,  50, 29, 3,  50, 71, 3,  51, 29, 4,  51, 69, 5,  52, 30, 4,  52, 65, 9,  53, 31, 6,  53, 63, 11,  54, 32, 7,  54, 61, 8,  54, 71, 3,  55, 34, 9,  55, 59, 6,  55, 71, 4,  56, 36, 12,  56, 55, 8,  56, 72, 3,  57, 39, 22,  57, 72, 4,  58, 43, 16,  58, 73, 4,  59, 49, 5,  59, 74, 4,  60, 75, 4,  60, 103, 19,  61, 76, 4,  61, 98, 30,  62, 77, 4,  62, 95, 33,  63, 78, 4,  63, 91, 12,  63, 123, 5,  255 // End of data marker
};
void displayFrame1() {
display.clearDisplay();
 for (uint16_t i = 0; i < sizeof(frame1); i += 3) {
uint8_t y = pgm_read_byte(&frame1[i]);
if (y == 255) {break;} // End of data marker
uint8_t startX = pgm_read_byte(&frame1[i + 1]);
uint8_t endX = pgm_read_byte(&frame1[i + 2]);
display.drawFastHLine(startX, y, endX, SSD1306_WHITE);
}
display.display(); // Send the buffer to the OLED
}

const uint8_t frame2[] PROGMEM = {
  1, 125, 3,  2, 87, 4,  2, 115, 13,  3, 79, 49,  4, 76, 49,  5, 74, 13,  5, 92, 22,  6, 72, 7,  7, 70, 6,  8, 69, 5,  9, 67, 5,  10, 66, 5,  11, 65, 5,  12, 63, 5,  13, 62, 5,  14, 61, 5,  15, 60, 4,  16, 59, 4,  17, 59, 3,  18, 59, 3,  19, 31, 13,  19, 57, 4,  20, 29, 20,  20, 54, 7,  21, 28, 33,  22, 27, 4,  22, 44, 17,  23, 27, 3,  23, 50, 3,  23, 58, 3,  24, 26, 3,  24, 58, 3,  25, 26, 3,  25, 58, 3,  26, 25, 3,  26, 58, 3,  27, 25, 3,  27, 58, 3,  27, 84, 12,  28, 25, 3,  28, 58, 3,  28, 79, 26,  29, 25, 3,  29, 58, 3,  29, 76, 37,  30, 25, 3,  30, 58, 3,  30, 73, 11,  30, 96, 32,  31, 25, 4,  31, 59, 3,  31, 71, 9,  31, 105, 23,  32, 26, 3,  32, 59, 9,  32, 69, 7,  32, 114, 14,  33, 26, 14,  33, 56, 17,  34, 27, 20,  34, 53, 18,  35, 29, 30,  35, 64, 5,  36, 41, 16,  36, 63, 5,  37, 23, 19,  37, 48, 4,  37, 62, 5,  38, 19, 28,  38, 60, 5,  39, 18, 47,  40, 17, 7,  40, 42, 22,  41, 16, 4,  41, 48, 16,  42, 15, 4,  42, 61, 3,  43, 15, 3,  43, 61, 3,  44, 15, 3,  44, 61, 3,  45, 15, 3,  45, 61, 3,  46, 15, 3,  46, 62, 3,  47, 15, 3,  47, 62, 3,  48, 15, 3,  48, 62, 4,  49, 15, 4,  49, 61, 6,  50, 16, 4,  50, 55, 13,  51, 17, 5,  51, 51, 19,  52, 18, 5,  52, 48, 12,  52, 65, 8,  53, 19, 6,  53, 45, 10,  53, 67, 8,  53, 88, 14,  54, 21, 6,  54, 42, 9,  54, 70, 40,  55, 23, 8,  55, 38, 11,  55, 72, 43,  56, 25, 21,  56, 75, 13,  56, 103, 16,  57, 27, 15,  57, 110, 12,  58, 31, 7,  58, 115, 10,  59, 118, 10,  60, 122, 6,  61, 125, 3,  255 // End of data marker
};
void displayFrame2() {
display.clearDisplay();
 for (uint16_t i = 0; i < sizeof(frame2); i += 3) {
uint8_t y = pgm_read_byte(&frame2[i]);
if (y == 255) {break;} // End of data marker
uint8_t startX = pgm_read_byte(&frame2[i + 1]);
uint8_t endX = pgm_read_byte(&frame2[i + 2]);
display.drawFastHLine(startX, y, endX, SSD1306_WHITE);
}
display.display(); // Send the buffer to the OLED
}

const uint8_t frame3[] PROGMEM = {
  0, 73, 8,  0, 106, 21,  1, 71, 7,  1, 115, 5,  2, 70, 6,  3, 68, 5,  4, 67, 5,  5, 67, 4,  6, 66, 4,  7, 65, 4,  8, 64, 4,  9, 63, 5,  10, 59, 8,  11, 54, 12,  12, 52, 11,  13, 51, 8,  14, 50, 5,  15, 50, 3,  16, 50, 3,  16, 84, 10,  17, 48, 5,  17, 78, 24,  18, 46, 7,  18, 75, 31,  19, 36, 17,  19, 72, 12,  19, 95, 15,  20, 33, 15,  20, 50, 3,  20, 69, 9,  20, 102, 12,  21, 32, 14,  21, 50, 3,  21, 65, 10,  21, 106, 14,  22, 31, 5,  22, 50, 3,  22, 63, 9,  22, 110, 18,  23, 30, 4,  23, 50, 3,  23, 61, 9,  23, 115, 13,  24, 29, 4,  24, 50, 3,  24, 58, 8,  24, 120, 8,  25, 29, 3,  25, 51, 3,  25, 55, 8,  26, 11, 9,  26, 28, 3,  26, 51, 10,  27, 8, 16,  27, 28, 3,  27, 51, 8,  28, 6, 24,  28, 52, 4,  29, 5, 6,  29, 20, 11,  29, 51, 4,  30, 4, 4,  30, 24, 10,  30, 50, 4,  31, 4, 3,  31, 28, 9,  31, 50, 3,  32, 3, 4,  32, 31, 10,  32, 50, 3,  33, 3, 3,  33, 34, 10,  33, 49, 4,  34, 3, 3,  34, 37, 16,  35, 3, 3,  35, 40, 13,  36, 4, 3,  36, 45, 4,  36, 50, 3,  37, 4, 3,  37, 50, 3,  38, 4, 3,  38, 51, 3,  39, 4, 4,  39, 51, 3,  40, 5, 3,  40, 51, 3,  41, 6, 3,  41, 52, 3,  42, 6, 4,  42, 52, 3,  43, 7, 4,  43, 52, 4,  44, 8, 4,  44, 53, 4,  45, 9, 4,  45, 54, 5,  45, 70, 13,  46, 10, 6,  46, 53, 34,  47, 11, 13,  47, 51, 39,  47, 100, 18,  48, 13, 17,  48, 50, 5,  48, 58, 12,  48, 83, 40,  49, 16, 17,  49, 48, 5,  49, 87, 40,  50, 24, 12,  50, 46, 6,  50, 89, 11,  50, 118, 10,  51, 30, 21,  51, 123, 5,  52, 33, 16,  52, 126, 2,  53, 36, 11,  255 // End of data marker
};
void displayFrame3() {
display.clearDisplay();
 for (uint16_t i = 0; i < sizeof(frame3); i += 3) {
uint8_t y = pgm_read_byte(&frame3[i]);
if (y == 255) {break;} // End of data marker
uint8_t startX = pgm_read_byte(&frame3[i + 1]);
uint8_t endX = pgm_read_byte(&frame3[i + 2]);
display.drawFastHLine(startX, y, endX, SSD1306_WHITE);
}
display.display(); // Send the buffer to the OLED
}

const uint8_t frame4[] PROGMEM = {
  0, 69, 7,  1, 67, 7,  2, 65, 7,  3, 63, 7,  4, 62, 12,  5, 60, 22,  6, 58, 30,  7, 57, 11,  7, 74, 19,  8, 55, 5,  8, 82, 18,  9, 53, 6,  9, 88, 26,  10, 50, 7,  10, 93, 33,  11, 45, 10,  11, 100, 28,  12, 41, 12,  12, 115, 13,  13, 40, 10,  13, 126, 2,  14, 38, 7,  15, 38, 4,  16, 37, 4,  17, 36, 4,  18, 36, 3,  19, 36, 3,  20, 0, 3,  20, 36, 3,  21, 0, 6,  21, 36, 3,  22, 0, 8,  22, 36, 3,  23, 3, 7,  23, 36, 3,  24, 6, 5,  24, 32, 7,  25, 7, 5,  25, 31, 8,  26, 9, 5,  26, 30, 10,  27, 10, 5,  27, 30, 3,  27, 36, 4,  28, 11, 5,  28, 30, 3,  28, 37, 3,  29, 13, 5,  29, 30, 3,  29, 38, 3,  30, 14, 5,  30, 30, 3,  30, 38, 3,  31, 16, 5,  31, 30, 3,  31, 38, 4,  32, 17, 5,  32, 30, 3,  32, 39, 3,  33, 18, 6,  33, 31, 3,  33, 39, 3,  34, 20, 6,  34, 31, 3,  34, 40, 3,  35, 22, 7,  35, 32, 3,  35, 40, 3,  36, 24, 12,  36, 40, 3,  37, 26, 18,  38, 29, 15,  39, 32, 12,  40, 36, 4,  40, 42, 3,  41, 0, 1,  41, 36, 3,  41, 42, 3,  41, 77, 11,  42, 0, 2,  42, 36, 3,  42, 42, 3,  42, 74, 18,  43, 0, 3,  43, 36, 3,  43, 42, 3,  43, 71, 25,  44, 0, 4,  44, 36, 3,  44, 43, 3,  44, 69, 8,  44, 88, 12,  45, 1, 4,  45, 36, 3,  45, 43, 3,  45, 67, 7,  45, 92, 14,  46, 2, 5,  46, 37, 3,  46, 43, 3,  46, 66, 6,  46, 95, 23,  47, 3, 5,  47, 37, 3,  47, 43, 3,  47, 64, 6,  47, 100, 25,  48, 4, 5,  48, 37, 4,  48, 43, 3,  48, 63, 7,  48, 106, 22,  49, 6, 5,  49, 38, 4,  49, 43, 3,  49, 61, 5,  49, 67, 3,  49, 118, 10,  50, 7, 5,  50, 39, 7,  50, 60, 5,  50, 67, 3,  50, 125, 3,  51, 9, 4,  51, 39, 8,  51, 58, 5,  51, 66, 4,  52, 10, 4,  52, 37, 10,  52, 56, 6,  52, 64, 5,  53, 11, 4,  53, 34, 9,  53, 44, 4,  53, 54, 6,  53, 63, 5,  54, 12, 4,  54, 32, 8,  54, 45, 4,  54, 52, 7,  54, 62, 4,  55, 13, 3,  55, 30, 7,  55, 45, 12,  55, 61, 4,  56, 13, 3,  56, 28, 7,  56, 46, 9,  56, 60, 4,  57, 14, 3,  57, 27, 5,  57, 46, 6,  57, 58, 5,  58, 14, 4,  58, 25, 6,  58, 46, 3,  58, 57, 5,  59, 15, 4,  59, 23, 6,  59, 47, 3,  59, 55, 5,  60, 16, 11,  60, 47, 12,  61, 17, 9,  61, 48, 9,  62, 19, 5,  62, 49, 6,  255 // End of data marker
};
void displayFrame4() {
display.clearDisplay();
 for (uint16_t i = 0; i < sizeof(frame4); i += 3) {
uint8_t y = pgm_read_byte(&frame4[i]);
if (y == 255) {break;} // End of data marker
uint8_t startX = pgm_read_byte(&frame4[i + 1]);
uint8_t endX = pgm_read_byte(&frame4[i + 2]);
display.drawFastHLine(startX, y, endX, SSD1306_WHITE);
}
display.display(); // Send the buffer to the OLED
}

const uint8_t frame5[] PROGMEM = {
  0, 56, 5,  1, 54, 6,  2, 53, 5,  3, 51, 6,  4, 49, 6,  5, 47, 6,  6, 43, 8,  7, 37, 12,  8, 35, 12,  9, 34, 8,  10, 33, 4,  11, 32, 4,  12, 31, 4,  13, 30, 4,  14, 30, 3,  15, 29, 3,  16, 29, 3,  17, 29, 3,  18, 28, 3,  19, 28, 3,  20, 28, 3,  21, 28, 3,  22, 0, 5,  22, 28, 3,  23, 0, 7,  23, 28, 3,  24, 2, 7,  24, 28, 3,  25, 5, 5,  25, 28, 3,  26, 6, 6,  26, 28, 3,  27, 8, 6,  27, 29, 3,  28, 10, 5,  28, 29, 3,  29, 11, 6,  29, 29, 3,  30, 13, 5,  30, 30, 3,  31, 14, 6,  31, 30, 3,  31, 62, 16,  32, 16, 5,  32, 31, 3,  32, 59, 29,  33, 17, 5,  33, 30, 5,  33, 57, 35,  34, 19, 5,  34, 28, 8,  34, 55, 7,  34, 70, 4,  34, 78, 20,  35, 20, 17,  35, 53, 6,  35, 68, 5,  35, 88, 15,  36, 22, 9,  36, 32, 6,  36, 51, 6,  36, 67, 5,  36, 92, 16,  37, 24, 4,  37, 32, 7,  37, 50, 6,  37, 66, 5,  37, 98, 15,  38, 33, 8,  38, 47, 10,  38, 66, 3,  38, 103, 15,  39, 33, 10,  39, 45, 7,  39, 53, 6,  39, 65, 4,  39, 108, 14,  40, 34, 18,  40, 55, 6,  40, 64, 4,  40, 113, 12,  41, 35, 4,  41, 40, 8,  41, 50, 3,  41, 56, 11,  41, 118, 9,  42, 36, 12,  42, 50, 4,  42, 58, 8,  42, 121, 7,  43, 37, 11,  43, 51, 4,  43, 60, 4,  43, 124, 4,  44, 0, 1,  44, 39, 9,  44, 51, 6,  44, 59, 5,  44, 126, 2,  45, 0, 2,  45, 41, 7,  45, 52, 10,  46, 0, 4,  46, 40, 4,  46, 45, 3,  46, 54, 7,  47, 0, 6,  47, 39, 4,  47, 45, 3,  47, 56, 4,  48, 2, 6,  48, 37, 5,  48, 46, 3,  48, 55, 4,  49, 3, 6,  49, 34, 7,  49, 46, 3,  49, 54, 4,  50, 5, 5,  50, 32, 8,  50, 46, 4,  50, 53, 4,  51, 7, 4,  51, 30, 7,  51, 47, 5,  51, 53, 3,  52, 8, 4,  52, 28, 7,  52, 48, 7,  53, 9, 4,  53, 27, 6,  53, 49, 6,  54, 10, 3,  54, 25, 6,  54, 52, 4,  55, 11, 4,  55, 24, 5,  55, 53, 3,  56, 11, 6,  56, 23, 5,  56, 53, 3,  57, 13, 6,  57, 21, 6,  57, 51, 5,  58, 15, 12,  58, 49, 6,  59, 16, 11,  59, 46, 8,  60, 18, 4,  60, 24, 3,  60, 45, 7,  61, 24, 3,  61, 43, 6,  62, 24, 3,  62, 42, 5,  63, 24, 3,  63, 40, 5,  255 // End of data marker
};
void displayFrame5() {
display.clearDisplay();
 for (uint16_t i = 0; i < sizeof(frame5); i += 3) {
uint8_t y = pgm_read_byte(&frame5[i]);
if (y == 255) {break;} // End of data marker
uint8_t startX = pgm_read_byte(&frame5[i + 1]);
uint8_t endX = pgm_read_byte(&frame5[i + 2]);
display.drawFastHLine(startX, y, endX, SSD1306_WHITE);
}
display.display(); // Send the buffer to the OLED
}

const uint8_t frame6[] PROGMEM = {
  0, 42, 3,  0, 127, 1,  1, 42, 3,  2, 42, 3,  3, 43, 3,  4, 43, 3,  5, 43, 3,  6, 44, 3,  7, 44, 3,  8, 44, 3,  8, 78, 4,  9, 44, 3,  9, 76, 8,  10, 43, 4,  10, 74, 12,  11, 42, 5,  11, 73, 5,  11, 82, 5,  12, 41, 6,  12, 71, 5,  12, 84, 5,  13, 40, 7,  13, 70, 5,  13, 85, 5,  14, 39, 5,  14, 45, 3,  14, 68, 5,  14, 87, 5,  15, 38, 5,  15, 45, 3,  15, 67, 5,  15, 88, 5,  16, 37, 5,  16, 45, 3,  16, 66, 4,  16, 90, 4,  17, 0, 6,  17, 36, 6,  17, 46, 3,  17, 64, 5,  17, 91, 4,  18, 0, 9,  18, 35, 7,  18, 46, 3,  18, 63, 5,  18, 86, 11,  19, 1, 10,  19, 33, 5,  19, 39, 3,  19, 47, 3,  19, 62, 4,  19, 84, 14,  20, 6, 8,  20, 31, 6,  20, 39, 3,  20, 47, 4,  20, 60, 5,  20, 82, 17,  21, 8, 11,  21, 28, 7,  21, 39, 3,  21, 48, 3,  21, 59, 5,  21, 81, 5,  21, 92, 8,  22, 11, 23,  22, 39, 3,  22, 48, 4,  22, 57, 6,  22, 80, 4,  22, 96, 5,  23, 14, 20,  23, 40, 3,  23, 49, 4,  23, 55, 6,  23, 79, 4,  23, 97, 5,  24, 19, 9,  24, 31, 3,  24, 40, 3,  24, 50, 10,  24, 78, 4,  24, 98, 4,  25, 31, 3,  25, 40, 4,  25, 50, 8,  25, 77, 4,  25, 99, 4,  26, 32, 3,  26, 41, 3,  26, 49, 7,  26, 76, 4,  26, 100, 5,  27, 32, 3,  27, 42, 3,  27, 48, 4,  27, 75, 4,  27, 101, 5,  28, 33, 3,  28, 42, 4,  28, 47, 4,  28, 74, 4,  28, 102, 5,  29, 33, 4,  29, 43, 7,  29, 73, 4,  29, 103, 5,  30, 34, 4,  30, 44, 5,  30, 72, 4,  30, 105, 4,  31, 35, 6,  31, 44, 4,  31, 72, 3,  31, 106, 5,  32, 36, 7,  32, 44, 3,  32, 71, 4,  32, 107, 6,  33, 38, 9,  33, 70, 4,  33, 109, 5,  34, 41, 5,  34, 69, 4,  34, 110, 6,  35, 41, 6,  35, 68, 4,  35, 112, 6,  36, 0, 1,  36, 41, 7,  36, 67, 4,  36, 114, 5,  37, 0, 2,  37, 40, 3,  37, 45, 3,  37, 66, 4,  37, 115, 6,  38, 0, 4,  38, 40, 3,  38, 44, 6,  38, 65, 4,  38, 117, 6,  39, 0, 7,  39, 39, 4,  39, 44, 7,  39, 65, 3,  39, 119, 5,  40, 2, 8,  40, 39, 3,  40, 43, 3,  40, 48, 4,  40, 64, 4,  40, 120, 6,  41, 4, 9,  41, 39, 7,  41, 49, 4,  41, 63, 4,  41, 122, 6,  42, 7, 9,  42, 38, 7,  42, 50, 5,  42, 62, 4,  42, 124, 4,  43, 10, 8,  43, 37, 8,  43, 51, 5,  43, 60, 5,  43, 126, 2,  44, 12, 8,  44, 37, 11,  44, 53, 11,  45, 15, 6,  45, 36, 4,  45, 42, 8,  45, 54, 8,  46, 17, 4,  46, 36, 3,  46, 45, 6,  46, 56, 5,  47, 19, 3,  47, 35, 4,  47, 47, 5,  47, 55, 4,  48, 19, 4,  48, 35, 3,  48, 48, 5,  48, 54, 4,  49, 20, 6,  49, 34, 4,  49, 50, 3,  49, 54, 3,  50, 21, 16,  50, 50, 7,  51, 22, 14,  51, 50, 6,  52, 25, 10,  52, 50, 5,  53, 25, 3,  53, 51, 3,  54, 25, 3,  54, 51, 4,  55, 24, 4,  55, 52, 4,  56, 23, 4,  56, 53, 3,  57, 22, 4,  57, 53, 3,  58, 22, 3,  58, 53, 3,  59, 22, 3,  59, 52, 3,  60, 22, 3,  60, 50, 5,  61, 22, 3,  61, 47, 7,  62, 22, 3,  62, 45, 7,  63, 22, 3,  63, 43, 7,  255 // End of data marker
};
void displayFrame6() {
display.clearDisplay();
 for (uint16_t i = 0; i < sizeof(frame6); i += 3) {
uint8_t y = pgm_read_byte(&frame6[i]);
if (y == 255) {break;} // End of data marker
uint8_t startX = pgm_read_byte(&frame6[i + 1]);
uint8_t endX = pgm_read_byte(&frame6[i + 2]);
display.drawFastHLine(startX, y, endX, SSD1306_WHITE);
}
display.display(); // Send the buffer to the OLED
}

const uint8_t frame7[] PROGMEM = {
  0, 0, 4,  0, 18, 6,  0, 39, 7,  0, 48, 3,  0, 56, 3,  0, 70, 5,  0, 100, 4,  1, 0, 3,  1, 20, 6,  1, 38, 6,  1, 48, 3,  1, 57, 3,  1, 68, 6,  1, 101, 4,  2, 0, 3,  2, 21, 7,  2, 34, 7,  2, 49, 3,  2, 57, 3,  2, 67, 5,  2, 102, 3,  3, 0, 3,  3, 23, 17,  3, 49, 3,  3, 57, 4,  3, 65, 6,  3, 102, 4,  4, 0, 3,  4, 25, 15,  4, 49, 4,  4, 58, 11,  4, 103, 4,  5, 1, 3,  5, 28, 7,  5, 37, 3,  5, 50, 4,  5, 58, 9,  5, 104, 3,  6, 1, 3,  6, 37, 3,  6, 51, 4,  6, 58, 8,  6, 104, 4,  7, 2, 3,  7, 37, 3,  7, 51, 5,  7, 58, 3,  7, 105, 3,  8, 2, 4,  8, 37, 3,  8, 52, 8,  8, 106, 3,  9, 3, 4,  9, 38, 3,  9, 50, 10,  9, 106, 4,  10, 4, 5,  10, 38, 4,  10, 48, 11,  10, 107, 3,  11, 5, 7,  11, 39, 14,  11, 54, 4,  11, 107, 4,  12, 6, 11,  12, 40, 11,  12, 53, 4,  12, 108, 3,  13, 8, 13,  13, 42, 6,  13, 52, 4,  13, 109, 3,  14, 11, 12,  14, 43, 3,  14, 51, 4,  14, 109, 4,  15, 17, 8,  15, 42, 3,  15, 50, 4,  15, 110, 3,  16, 21, 6,  16, 41, 4,  16, 49, 4,  16, 110, 4,  17, 23, 5,  17, 40, 4,  17, 48, 4,  17, 111, 4,  18, 24, 4,  18, 39, 4,  18, 48, 4,  18, 82, 5,  18, 112, 3,  19, 25, 4,  19, 38, 4,  19, 47, 4,  19, 80, 10,  19, 112, 4,  20, 26, 4,  20, 37, 4,  20, 46, 4,  20, 79, 14,  20, 113, 3,  21, 27, 5,  21, 35, 5,  21, 46, 3,  21, 78, 4,  21, 87, 11,  21, 114, 3,  22, 28, 11,  22, 45, 3,  22, 78, 3,  22, 89, 15,  22, 114, 4,  23, 29, 9,  23, 44, 4,  23, 77, 4,  23, 93, 16,  23, 115, 3,  24, 32, 3,  24, 44, 3,  24, 76, 4,  24, 98, 14,  24, 116, 3,  25, 44, 3,  25, 75, 4,  25, 104, 11,  25, 116, 4,  26, 44, 2,  26, 75, 3,  26, 108, 12,  27, 43, 3,  27, 74, 4,  27, 112, 9,  28, 44, 3,  28, 73, 4,  28, 115, 7,  29, 44, 3,  29, 72, 4,  29, 119, 4,  30, 44, 3,  30, 72, 3,  30, 120, 3,  31, 45, 3,  31, 71, 3,  31, 120, 4,  32, 45, 3,  32, 70, 4,  32, 121, 4,  33, 28, 5,  33, 46, 3,  33, 69, 4,  33, 122, 4,  34, 27, 7,  34, 46, 3,  34, 68, 4,  34, 123, 4,  35, 26, 9,  35, 46, 3,  35, 67, 4,  35, 124, 4,  36, 25, 4,  36, 32, 4,  36, 45, 5,  36, 66, 4,  36, 125, 3,  37, 24, 4,  37, 33, 3,  37, 45, 5,  37, 65, 4,  37, 126, 2,  38, 24, 3,  38, 33, 3,  38, 45, 6,  38, 64, 4,  38, 127, 1,  39, 24, 3,  39, 33, 3,  39, 45, 6,  39, 63, 4,  40, 23, 3,  40, 34, 3,  40, 44, 3,  40, 48, 4,  40, 62, 4,  41, 23, 3,  41, 34, 3,  41, 44, 3,  41, 49, 3,  41, 62, 3,  42, 23, 3,  42, 34, 3,  42, 43, 4,  42, 49, 3,  42, 61, 4,  43, 23, 3,  43, 35, 3,  43, 43, 4,  43, 50, 3,  43, 60, 4,  44, 23, 2,  44, 35, 4,  44, 42, 6,  44, 50, 3,  44, 59, 4,  45, 23, 2,  45, 36, 4,  45, 41, 7,  45, 50, 4,  45, 58, 4,  46, 22, 3,  46, 37, 7,  46, 45, 3,  46, 51, 3,  46, 58, 3,  47, 23, 2,  47, 38, 5,  47, 46, 3,  47, 51, 10,  48, 23, 3,  48, 39, 3,  48, 46, 3,  48, 52, 8,  49, 23, 3,  49, 46, 4,  49, 52, 7,  50, 23, 3,  50, 47, 7,  51, 23, 3,  51, 48, 6,  52, 23, 4,  52, 48, 5,  53, 24, 3,  53, 49, 5,  54, 24, 3,  54, 50, 5,  55, 24, 3,  55, 52, 4,  56, 23, 4,  56, 53, 4,  57, 23, 3,  57, 54, 3,  58, 22, 4,  58, 52, 5,  59, 22, 3,  59, 51, 5,  60, 22, 3,  60, 49, 6,  61, 22, 3,  61, 48, 5,  62, 22, 3,  62, 46, 5,  63, 22, 3,  63, 45, 5,  255 // End of data marker
};
void displayFrame7() {
display.clearDisplay();
 for (uint16_t i = 0; i < sizeof(frame7); i += 3) {
uint8_t y = pgm_read_byte(&frame7[i]);
if (y == 255) {break;} // End of data marker
uint8_t startX = pgm_read_byte(&frame7[i + 1]);
uint8_t endX = pgm_read_byte(&frame7[i + 2]);
display.drawFastHLine(startX, y, endX, SSD1306_WHITE);
}
display.display(); // Send the buffer to the OLED
}

const uint8_t frame8[] PROGMEM = {
  0, 53, 7,  0, 116, 3,  1, 51, 7,  1, 117, 3,  2, 49, 7,  2, 117, 3,  3, 47, 7,  3, 117, 3,  4, 45, 6,  4, 118, 3,  5, 44, 5,  5, 118, 3,  6, 43, 5,  6, 119, 3,  7, 42, 4,  7, 119, 3,  8, 41, 4,  8, 119, 4,  9, 41, 3,  9, 120, 3,  10, 41, 3,  10, 120, 3,  11, 41, 3,  11, 90, 7,  11, 121, 3,  12, 41, 3,  12, 89, 13,  12, 121, 3,  13, 41, 4,  13, 88, 18,  13, 122, 3,  14, 42, 3,  14, 87, 4,  14, 98, 12,  14, 122, 4,  15, 42, 3,  15, 86, 4,  15, 102, 13,  15, 123, 3,  16, 43, 3,  16, 85, 4,  16, 106, 14,  16, 123, 4,  17, 43, 3,  17, 85, 3,  17, 110, 17,  18, 43, 4,  18, 84, 4,  18, 115, 13,  19, 27, 3,  19, 44, 3,  19, 83, 4,  19, 121, 7,  20, 25, 7,  20, 44, 4,  20, 82, 4,  20, 125, 3,  21, 24, 9,  21, 45, 3,  21, 81, 4,  21, 126, 2,  22, 23, 4,  22, 30, 4,  22, 45, 3,  22, 79, 5,  22, 127, 1,  23, 22, 4,  23, 31, 3,  23, 46, 3,  23, 78, 5,  24, 22, 3,  24, 32, 3,  24, 46, 3,  24, 77, 5,  25, 21, 3,  25, 32, 3,  25, 47, 3,  25, 76, 4,  26, 21, 3,  26, 33, 3,  26, 47, 3,  26, 75, 4,  27, 21, 3,  27, 33, 3,  27, 47, 3,  27, 74, 4,  28, 21, 3,  28, 33, 4,  28, 48, 3,  28, 73, 4,  29, 21, 2,  29, 34, 3,  29, 48, 3,  29, 71, 5,  30, 20, 3,  30, 34, 3,  30, 49, 3,  30, 70, 5,  31, 20, 3,  31, 34, 4,  31, 49, 3,  31, 69, 5,  32, 20, 3,  32, 35, 3,  32, 49, 3,  32, 68, 4,  33, 20, 3,  33, 35, 3,  33, 48, 5,  33, 66, 5,  34, 20, 3,  34, 35, 4,  34, 48, 5,  34, 65, 5,  35, 21, 2,  35, 36, 3,  35, 47, 7,  35, 64, 4,  36, 21, 3,  36, 36, 3,  36, 46, 4,  36, 51, 3,  36, 62, 5,  37, 21, 3,  37, 37, 3,  37, 45, 5,  37, 52, 3,  37, 61, 5,  38, 21, 3,  38, 37, 4,  38, 44, 6,  38, 52, 4,  38, 60, 5,  39, 21, 3,  39, 38, 13,  39, 53, 10,  40, 21, 3,  40, 39, 7,  40, 48, 3,  40, 54, 8,  41, 22, 3,  41, 40, 4,  41, 48, 4,  41, 55, 6,  42, 22, 3,  42, 49, 3,  42, 56, 4,  43, 22, 3,  43, 49, 3,  43, 55, 4,  44, 22, 4,  44, 50, 3,  44, 54, 4,  45, 23, 3,  45, 50, 7,  46, 23, 3,  46, 51, 5,  47, 23, 3,  47, 51, 4,  48, 24, 2,  48, 52, 3,  49, 24, 3,  49, 52, 3,  50, 24, 3,  50, 52, 3,  51, 23, 4,  51, 53, 3,  52, 22, 4,  52, 53, 3,  53, 22, 3,  53, 52, 4,  54, 22, 3,  54, 51, 4,  55, 22, 3,  55, 49, 6,  56, 22, 3,  56, 47, 7,  57, 22, 3,  57, 45, 7,  58, 22, 2,  58, 43, 7,  59, 22, 2,  59, 42, 5,  60, 22, 3,  60, 40, 6,  61, 22, 3,  61, 38, 6,  62, 22, 3,  62, 36, 6,  63, 22, 3,  63, 34, 7,  255 // End of data marker
};
void displayFrame8() {
display.clearDisplay();
 for (uint16_t i = 0; i < sizeof(frame8); i += 3) {
uint8_t y = pgm_read_byte(&frame8[i]);
if (y == 255) {break;} // End of data marker
uint8_t startX = pgm_read_byte(&frame8[i + 1]);
uint8_t endX = pgm_read_byte(&frame8[i + 2]);
display.drawFastHLine(startX, y, endX, SSD1306_WHITE);
}
display.display(); // Send the buffer to the OLED
}

const uint8_t frame9[] PROGMEM = {
  0, 60, 7,  0, 124, 3,  1, 59, 6,  1, 124, 4,  2, 57, 6,  2, 125, 3,  3, 55, 6,  3, 125, 3,  4, 53, 6,  4, 126, 2,  5, 51, 6,  5, 126, 2,  6, 49, 7,  6, 127, 1,  7, 48, 6,  7, 127, 1,  8, 47, 5,  9, 46, 4,  10, 46, 3,  10, 100, 7,  11, 46, 3,  11, 96, 17,  12, 46, 3,  12, 94, 27,  13, 46, 3,  13, 93, 7,  13, 108, 20,  14, 47, 3,  14, 92, 5,  14, 114, 14,  15, 47, 3,  15, 91, 4,  15, 121, 7,  16, 47, 3,  16, 91, 3,  17, 48, 3,  17, 90, 3,  18, 27, 3,  18, 48, 3,  18, 89, 4,  19, 25, 7,  19, 49, 3,  19, 88, 4,  20, 24, 10,  20, 49, 3,  20, 87, 4,  21, 23, 4,  21, 30, 5,  21, 50, 3,  21, 86, 4,  22, 23, 3,  22, 32, 3,  22, 50, 3,  22, 86, 4,  23, 22, 4,  23, 33, 3,  23, 51, 3,  23, 84, 5,  24, 22, 3,  24, 33, 4,  24, 51, 3,  24, 83, 5,  25, 22, 3,  25, 34, 3,  25, 52, 3,  25, 82, 5,  26, 22, 3,  26, 34, 4,  26, 52, 3,  26, 81, 4,  27, 21, 3,  27, 35, 3,  27, 53, 3,  27, 79, 5,  28, 21, 3,  28, 35, 3,  28, 52, 5,  28, 78, 5,  29, 21, 3,  29, 36, 3,  29, 51, 6,  29, 76, 5,  30, 21, 3,  30, 36, 3,  30, 51, 7,  30, 75, 5,  31, 21, 3,  31, 36, 3,  31, 50, 8,  31, 74, 5,  32, 21, 3,  32, 37, 3,  32, 50, 5,  32, 56, 3,  32, 73, 4,  33, 22, 3,  33, 37, 3,  33, 49, 6,  33, 56, 3,  33, 71, 5,  34, 22, 3,  34, 37, 4,  34, 49, 6,  34, 57, 3,  34, 70, 5,  35, 22, 3,  35, 38, 3,  35, 48, 3,  35, 52, 3,  35, 57, 3,  35, 69, 5,  36, 22, 3,  36, 38, 4,  36, 47, 4,  36, 53, 3,  36, 58, 3,  36, 67, 5,  37, 22, 3,  37, 39, 4,  37, 47, 3,  37, 53, 4,  37, 58, 4,  37, 66, 5,  38, 23, 3,  38, 40, 10,  38, 54, 4,  38, 59, 11,  39, 23, 3,  39, 41, 8,  39, 55, 13,  40, 23, 3,  40, 42, 7,  40, 56, 10,  41, 23, 4,  41, 46, 4,  41, 57, 6,  42, 24, 3,  42, 47, 3,  42, 58, 4,  43, 24, 4,  43, 47, 3,  43, 57, 4,  44, 25, 3,  44, 48, 3,  44, 56, 4,  45, 25, 4,  45, 48, 3,  45, 55, 4,  46, 26, 3,  46, 48, 4,  46, 54, 4,  47, 26, 3,  47, 49, 8,  48, 25, 4,  48, 50, 6,  49, 25, 3,  49, 52, 4,  50, 24, 3,  50, 53, 3,  51, 24, 3,  51, 54, 3,  52, 24, 3,  52, 54, 3,  53, 23, 3,  53, 54, 3,  54, 23, 3,  54, 53, 4,  55, 23, 3,  55, 51, 5,  56, 23, 3,  56, 49, 6,  57, 23, 3,  57, 46, 8,  58, 23, 3,  58, 44, 7,  59, 23, 3,  59, 41, 8,  60, 23, 3,  60, 39, 8,  61, 24, 3,  61, 37, 7,  62, 24, 3,  62, 35, 6,  63, 24, 4,  63, 31, 8,  255 // End of data marker
};
void displayFrame9() {
display.clearDisplay();
 for (uint16_t i = 0; i < sizeof(frame9); i += 3) {
uint8_t y = pgm_read_byte(&frame9[i]);
if (y == 255) {break;} // End of data marker
uint8_t startX = pgm_read_byte(&frame9[i + 1]);
uint8_t endX = pgm_read_byte(&frame9[i + 2]);
display.drawFastHLine(startX, y, endX, SSD1306_WHITE);
}
display.display(); // Send the buffer to the OLED
}

const uint8_t frame10[] PROGMEM = {
  0, 68, 6,  1, 66, 7,  2, 64, 7,  3, 61, 8,  4, 59, 8,  5, 57, 7,  6, 54, 8,  7, 52, 8,  8, 51, 6,  9, 50, 5,  10, 50, 3,  10, 111, 14,  11, 49, 4,  11, 108, 20,  12, 49, 3,  12, 106, 22,  13, 49, 3,  13, 104, 8,  13, 122, 6,  14, 49, 4,  14, 103, 6,  15, 29, 4,  15, 50, 3,  15, 102, 4,  16, 28, 7,  16, 50, 3,  16, 101, 4,  17, 27, 9,  17, 50, 4,  17, 100, 4,  18, 26, 4,  18, 32, 5,  18, 51, 3,  18, 99, 4,  19, 25, 4,  19, 34, 3,  19, 51, 4,  19, 98, 4,  20, 25, 3,  20, 34, 4,  20, 52, 3,  20, 97, 4,  21, 25, 3,  21, 35, 3,  21, 52, 4,  21, 96, 4,  22, 24, 4,  22, 35, 4,  22, 53, 3,  22, 95, 4,  23, 24, 3,  23, 36, 3,  23, 53, 4,  23, 94, 4,  24, 24, 3,  24, 36, 4,  24, 54, 3,  24, 93, 4,  25, 24, 3,  25, 37, 3,  25, 54, 4,  25, 92, 4,  26, 24, 3,  26, 37, 4,  26, 55, 4,  26, 91, 4,  27, 24, 3,  27, 38, 3,  27, 56, 3,  27, 89, 5,  28, 24, 3,  28, 38, 3,  28, 56, 4,  28, 88, 5,  29, 24, 3,  29, 38, 4,  29, 55, 6,  29, 86, 6,  30, 24, 3,  30, 39, 3,  30, 54, 7,  30, 85, 5,  31, 24, 3,  31, 39, 3,  31, 53, 9,  31, 83, 6,  32, 24, 3,  32, 39, 4,  32, 51, 12,  32, 81, 6,  33, 24, 3,  33, 40, 3,  33, 50, 9,  33, 60, 4,  33, 80, 6,  34, 24, 3,  34, 40, 4,  34, 49, 5,  34, 56, 3,  34, 61, 3,  34, 78, 6,  35, 24, 4,  35, 41, 13,  35, 56, 4,  35, 61, 4,  35, 76, 6,  36, 25, 3,  36, 42, 12,  36, 57, 3,  36, 62, 4,  36, 75, 5,  37, 25, 3,  37, 43, 7,  37, 51, 4,  37, 57, 4,  37, 63, 3,  37, 73, 6,  38, 25, 3,  38, 45, 2,  38, 52, 3,  38, 58, 4,  38, 63, 4,  38, 71, 6,  39, 25, 4,  39, 52, 3,  39, 58, 10,  39, 70, 6,  40, 26, 3,  40, 52, 4,  40, 59, 15,  41, 26, 3,  41, 53, 3,  41, 60, 12,  42, 27, 3,  42, 53, 3,  42, 60, 5,  42, 67, 4,  43, 27, 3,  43, 53, 4,  43, 59, 4,  44, 27, 3,  44, 54, 8,  45, 27, 3,  45, 54, 7,  46, 27, 3,  46, 55, 5,  47, 27, 3,  47, 55, 4,  48, 27, 3,  48, 56, 3,  49, 26, 3,  49, 56, 3,  50, 26, 3,  50, 56, 3,  51, 26, 3,  51, 56, 3,  52, 26, 3,  52, 54, 5,  53, 26, 3,  53, 51, 7,  54, 26, 3,  54, 49, 8,  55, 26, 3,  55, 47, 7,  56, 26, 3,  56, 46, 6,  57, 26, 3,  57, 44, 6,  58, 26, 4,  58, 42, 6,  59, 27, 3,  59, 39, 7,  60, 27, 4,  60, 37, 8,  61, 28, 14,  62, 29, 11,  63, 30, 8,  255 // End of data marker
};
void displayFrame10() {
display.clearDisplay();
 for (uint16_t i = 0; i < sizeof(frame10); i += 3) {
uint8_t y = pgm_read_byte(&frame10[i]);
if (y == 255) {break;} // End of data marker
uint8_t startX = pgm_read_byte(&frame10[i + 1]);
uint8_t endX = pgm_read_byte(&frame10[i + 2]);
display.drawFastHLine(startX, y, endX, SSD1306_WHITE);
}
display.display(); // Send the buffer to the OLED
}

const uint8_t frame11[] PROGMEM = {
  0, 75, 6,  1, 73, 6,  2, 71, 6,  3, 69, 6,  4, 67, 6,  5, 65, 7,  5, 120, 8,  6, 63, 7,  6, 116, 12,  7, 62, 6,  7, 114, 14,  8, 60, 6,  8, 113, 6,  9, 59, 5,  9, 111, 5,  10, 58, 5,  10, 110, 5,  11, 57, 4,  11, 109, 5,  12, 57, 3,  12, 107, 5,  13, 56, 3,  13, 106, 5,  14, 56, 3,  14, 104, 6,  15, 56, 3,  15, 103, 5,  16, 32, 4,  16, 56, 3,  16, 101, 5,  17, 30, 8,  17, 56, 3,  17, 100, 5,  18, 29, 10,  18, 56, 3,  18, 98, 5,  19, 28, 4,  19, 35, 4,  19, 56, 4,  19, 97, 5,  20, 27, 4,  20, 36, 4,  20, 57, 3,  20, 96, 4,  21, 26, 4,  21, 37, 3,  21, 57, 3,  21, 95, 4,  22, 26, 3,  22, 37, 4,  22, 58, 3,  22, 94, 4,  23, 25, 4,  23, 38, 3,  23, 58, 4,  23, 93, 4,  24, 25, 3,  24, 38, 3,  24, 59, 3,  24, 92, 4,  25, 25, 3,  25, 38, 3,  25, 59, 4,  25, 91, 4,  26, 25, 3,  26, 38, 3,  26, 60, 3,  26, 90, 4,  27, 24, 3,  27, 38, 3,  27, 59, 5,  27, 88, 5,  28, 24, 3,  28, 38, 3,  28, 58, 6,  28, 87, 5,  29, 24, 3,  29, 38, 3,  29, 57, 8,  29, 86, 4,  30, 24, 3,  30, 39, 3,  30, 55, 5,  30, 62, 3,  30, 84, 5,  31, 24, 3,  31, 39, 3,  31, 54, 5,  31, 63, 3,  31, 83, 5,  32, 24, 3,  32, 39, 4,  32, 52, 7,  32, 63, 3,  32, 81, 6,  33, 24, 3,  33, 40, 4,  33, 49, 10,  33, 64, 3,  33, 79, 6,  34, 24, 3,  34, 41, 14,  34, 56, 4,  34, 64, 3,  34, 78, 5,  35, 24, 3,  35, 42, 11,  35, 57, 3,  35, 65, 3,  35, 76, 6,  36, 24, 3,  36, 43, 10,  36, 57, 4,  36, 65, 4,  36, 73, 7,  37, 24, 3,  37, 50, 3,  37, 58, 4,  37, 66, 12,  38, 24, 3,  38, 50, 3,  38, 59, 3,  38, 64, 12,  39, 24, 3,  39, 50, 3,  39, 60, 13,  40, 25, 3,  40, 50, 3,  40, 60, 7,  41, 25, 3,  41, 50, 3,  41, 60, 5,  42, 25, 3,  42, 50, 3,  42, 58, 6,  43, 26, 3,  43, 50, 3,  43, 57, 5,  44, 26, 3,  44, 51, 3,  44, 55, 6,  45, 26, 3,  45, 51, 8,  46, 27, 3,  46, 51, 6,  47, 26, 4,  47, 52, 4,  48, 25, 4,  48, 53, 3,  49, 24, 4,  49, 53, 3,  50, 24, 3,  50, 53, 3,  51, 23, 3,  51, 51, 5,  52, 23, 3,  52, 49, 6,  53, 23, 3,  53, 47, 7,  54, 23, 3,  54, 45, 7,  55, 23, 3,  55, 43, 6,  56, 23, 3,  56, 41, 6,  57, 23, 3,  57, 39, 6,  58, 23, 3,  58, 37, 6,  59, 23, 3,  59, 34, 7,  60, 24, 3,  60, 31, 8,  61, 24, 13,  62, 25, 10,  63, 26, 5,  255 // End of data marker
};
void displayFrame11() {
display.clearDisplay();
 for (uint16_t i = 0; i < sizeof(frame11); i += 3) {
uint8_t y = pgm_read_byte(&frame11[i]);
if (y == 255) {break;} // End of data marker
uint8_t startX = pgm_read_byte(&frame11[i + 1]);
uint8_t endX = pgm_read_byte(&frame11[i + 2]);
display.drawFastHLine(startX, y, endX, SSD1306_WHITE);
}
display.display(); // Send the buffer to the OLED
}

const uint8_t frame12[] PROGMEM = {
  0, 84, 5,  1, 83, 5,  2, 81, 5,  3, 80, 5,  4, 79, 5,  4, 123, 5,  5, 78, 4,  5, 120, 8,  6, 77, 4,  6, 118, 10,  7, 76, 4,  7, 116, 7,  8, 74, 5,  8, 114, 6,  9, 73, 5,  9, 112, 6,  10, 71, 5,  10, 111, 5,  11, 70, 5,  11, 109, 6,  12, 68, 6,  12, 108, 5,  13, 66, 6,  13, 107, 5,  14, 65, 5,  14, 106, 4,  15, 63, 6,  15, 104, 5,  16, 60, 7,  16, 103, 5,  17, 58, 7,  17, 102, 4,  18, 56, 7,  18, 100, 5,  19, 54, 7,  19, 99, 5,  20, 53, 5,  20, 98, 4,  21, 53, 3,  21, 97, 4,  22, 53, 3,  22, 95, 5,  23, 53, 3,  23, 94, 5,  24, 53, 3,  24, 93, 5,  25, 53, 3,  25, 91, 5,  26, 53, 3,  26, 90, 5,  27, 31, 3,  27, 54, 3,  27, 88, 5,  28, 28, 8,  28, 54, 3,  28, 87, 5,  29, 26, 11,  29, 54, 3,  29, 86, 4,  30, 24, 7,  30, 34, 4,  30, 54, 4,  30, 84, 5,  31, 23, 5,  31, 35, 3,  31, 53, 5,  31, 83, 5,  32, 22, 5,  32, 36, 3,  32, 52, 7,  32, 82, 5,  33, 22, 3,  33, 36, 3,  33, 51, 8,  33, 81, 4,  34, 21, 4,  34, 36, 2,  34, 49, 6,  34, 56, 3,  34, 80, 4,  35, 21, 3,  35, 35, 3,  35, 48, 7,  35, 57, 3,  35, 79, 4,  36, 20, 3,  36, 35, 3,  36, 47, 4,  36, 52, 3,  36, 57, 3,  36, 77, 5,  37, 20, 3,  37, 35, 3,  37, 41, 9,  37, 53, 3,  37, 57, 4,  37, 76, 5,  38, 20, 3,  38, 34, 15,  38, 53, 3,  38, 58, 3,  38, 75, 5,  39, 20, 3,  39, 33, 14,  39, 54, 3,  39, 59, 3,  39, 73, 5,  40, 20, 3,  40, 33, 9,  40, 44, 3,  40, 54, 3,  40, 59, 4,  40, 72, 5,  41, 20, 3,  41, 45, 3,  41, 55, 3,  41, 60, 4,  41, 70, 6,  42, 20, 3,  42, 45, 3,  42, 55, 19,  43, 20, 3,  43, 45, 4,  43, 56, 16,  44, 20, 3,  44, 46, 3,  44, 55, 5,  44, 63, 7,  45, 20, 3,  45, 46, 4,  45, 53, 6,  46, 21, 3,  46, 47, 4,  46, 52, 5,  47, 21, 3,  47, 48, 8,  48, 21, 3,  48, 49, 5,  49, 21, 3,  49, 49, 4,  50, 21, 3,  50, 50, 4,  51, 21, 3,  51, 51, 3,  52, 19, 4,  52, 50, 4,  53, 18, 5,  53, 48, 5,  54, 18, 4,  54, 44, 8,  55, 17, 3,  55, 42, 9,  56, 17, 3,  56, 40, 8,  57, 17, 3,  57, 39, 5,  58, 18, 3,  58, 37, 5,  59, 18, 3,  59, 36, 5,  60, 18, 3,  60, 35, 4,  61, 19, 3,  61, 34, 4,  62, 19, 3,  62, 32, 5,  63, 19, 4,  63, 30, 6,  255 // End of data marker
};
void displayFrame12() {
display.clearDisplay();
 for (uint16_t i = 0; i < sizeof(frame12); i += 3) {
uint8_t y = pgm_read_byte(&frame12[i]);
if (y == 255) {break;} // End of data marker
uint8_t startX = pgm_read_byte(&frame12[i + 1]);
uint8_t endX = pgm_read_byte(&frame12[i + 2]);
display.drawFastHLine(startX, y, endX, SSD1306_WHITE);
}
display.display(); // Send the buffer to the OLED
}

const uint8_t frame13[] PROGMEM = {
  0, 79, 6,  1, 78, 5,  2, 76, 5,  3, 75, 5,  4, 73, 5,  5, 72, 5,  6, 70, 5,  6, 125, 3,  7, 68, 6,  7, 120, 8,  8, 66, 6,  8, 116, 12,  9, 64, 7,  9, 114, 11,  10, 62, 7,  10, 112, 9,  11, 60, 7,  11, 110, 7,  12, 58, 7,  12, 109, 5,  13, 56, 7,  13, 107, 5,  14, 54, 7,  14, 106, 5,  15, 52, 7,  15, 104, 5,  16, 51, 6,  16, 103, 5,  17, 50, 5,  17, 102, 5,  18, 49, 4,  18, 101, 4,  19, 48, 4,  19, 100, 4,  20, 48, 3,  20, 99, 4,  21, 47, 4,  21, 98, 4,  22, 47, 3,  22, 97, 4,  23, 47, 3,  23, 96, 4,  24, 46, 3,  24, 94, 5,  25, 46, 3,  25, 93, 5,  26, 46, 3,  26, 92, 5,  27, 47, 3,  27, 90, 5,  28, 47, 3,  28, 89, 5,  29, 47, 3,  29, 87, 6,  30, 48, 3,  30, 86, 5,  31, 48, 4,  31, 84, 6,  32, 49, 3,  32, 82, 6,  33, 49, 4,  33, 80, 6,  34, 50, 3,  34, 78, 7,  35, 50, 4,  35, 77, 6,  36, 50, 4,  36, 75, 6,  37, 26, 6,  37, 49, 6,  37, 73, 6,  38, 23, 11,  38, 48, 8,  38, 72, 5,  39, 21, 13,  39, 46, 6,  39, 53, 3,  39, 70, 6,  40, 20, 6,  40, 31, 4,  40, 45, 7,  40, 53, 4,  40, 69, 5,  41, 19, 5,  41, 32, 3,  41, 43, 5,  41, 50, 3,  41, 54, 4,  41, 67, 5,  42, 18, 4,  42, 32, 3,  42, 42, 5,  42, 50, 3,  42, 55, 3,  42, 66, 5,  43, 18, 3,  43, 32, 3,  43, 37, 9,  43, 50, 3,  43, 55, 4,  43, 63, 6,  44, 17, 3,  44, 32, 3,  44, 36, 8,  44, 51, 3,  44, 56, 12,  45, 17, 3,  45, 32, 11,  45, 51, 3,  45, 57, 9,  46, 16, 3,  46, 31, 7,  46, 40, 3,  46, 51, 4,  46, 56, 8,  47, 16, 3,  47, 31, 6,  47, 41, 3,  47, 52, 9,  48, 16, 3,  48, 41, 3,  48, 52, 7,  49, 16, 3,  49, 41, 3,  49, 50, 6,  50, 16, 3,  50, 42, 3,  50, 48, 6,  51, 16, 3,  51, 42, 3,  51, 47, 5,  52, 16, 3,  52, 42, 9,  53, 17, 3,  53, 43, 6,  54, 17, 3,  54, 44, 4,  55, 18, 3,  55, 45, 4,  56, 17, 4,  56, 46, 3,  57, 16, 4,  57, 45, 4,  58, 15, 5,  58, 44, 4,  59, 14, 4,  59, 43, 4,  60, 14, 3,  60, 40, 6,  61, 13, 4,  61, 38, 7,  62, 13, 3,  62, 36, 7,  63, 13, 3,  63, 34, 7,  255 // End of data marker
};
void displayFrame13() {
display.clearDisplay();
 for (uint16_t i = 0; i < sizeof(frame13); i += 3) {
uint8_t y = pgm_read_byte(&frame13[i]);
if (y == 255) {break;} // End of data marker
uint8_t startX = pgm_read_byte(&frame13[i + 1]);
uint8_t endX = pgm_read_byte(&frame13[i + 2]);
display.drawFastHLine(startX, y, endX, SSD1306_WHITE);
}
display.display(); // Send the buffer to the OLED
}

const uint8_t frame14[] PROGMEM = {
  0, 91, 7,  1, 89, 6,  2, 87, 6,  3, 86, 6,  4, 84, 6,  5, 82, 6,  6, 81, 5,  7, 79, 6,  8, 77, 6,  9, 75, 6,  10, 73, 6,  11, 71, 6,  12, 69, 6,  13, 67, 6,  14, 65, 6,  15, 63, 6,  16, 61, 6,  17, 59, 7,  18, 57, 7,  19, 55, 7,  19, 127, 1,  20, 53, 7,  20, 123, 5,  21, 51, 7,  21, 119, 9,  22, 49, 7,  22, 116, 11,  23, 46, 7,  23, 113, 10,  24, 44, 7,  24, 111, 9,  25, 42, 7,  25, 109, 8,  26, 40, 7,  26, 107, 7,  27, 39, 5,  27, 104, 7,  28, 39, 3,  28, 103, 6,  29, 39, 3,  29, 101, 7,  30, 39, 3,  30, 100, 5,  31, 39, 3,  31, 99, 4,  32, 40, 3,  32, 99, 3,  33, 40, 3,  33, 98, 4,  34, 40, 3,  34, 97, 4,  35, 41, 3,  35, 96, 4,  36, 41, 3,  36, 95, 4,  37, 42, 3,  37, 94, 4,  38, 42, 3,  38, 93, 4,  39, 42, 4,  39, 92, 4,  40, 43, 3,  40, 90, 5,  41, 43, 4,  41, 89, 5,  42, 44, 3,  42, 87, 6,  43, 45, 3,  43, 85, 6,  44, 45, 3,  44, 83, 6,  45, 46, 3,  45, 81, 7,  46, 46, 3,  46, 80, 6,  47, 46, 4,  47, 78, 6,  48, 47, 3,  48, 76, 6,  49, 47, 4,  49, 75, 5,  50, 48, 3,  50, 73, 6,  51, 47, 5,  51, 72, 5,  52, 45, 8,  52, 70, 5,  53, 44, 5,  53, 50, 3,  53, 69, 5,  54, 42, 6,  54, 50, 4,  54, 67, 5,  55, 19, 1,  55, 40, 6,  55, 51, 4,  55, 66, 5,  56, 14, 9,  56, 39, 7,  56, 52, 4,  56, 64, 5,  57, 13, 11,  57, 37, 6,  57, 44, 3,  57, 53, 4,  57, 62, 6,  58, 12, 6,  58, 20, 4,  58, 36, 5,  58, 44, 3,  58, 54, 13,  59, 11, 4,  59, 21, 4,  59, 32, 7,  59, 45, 3,  59, 55, 10,  60, 10, 4,  60, 22, 3,  60, 30, 8,  60, 45, 3,  60, 53, 10,  61, 9, 4,  61, 23, 3,  61, 27, 9,  61, 46, 3,  61, 51, 7,  62, 9, 3,  62, 23, 13,  62, 46, 10,  63, 8, 3,  63, 21, 9,  63, 33, 3,  63, 46, 7,  255 // End of data marker
};
void displayFrame14() {
display.clearDisplay();
 for (uint16_t i = 0; i < sizeof(frame14); i += 3) {
uint8_t y = pgm_read_byte(&frame14[i]);
if (y == 255) {break;} // End of data marker
uint8_t startX = pgm_read_byte(&frame14[i + 1]);
uint8_t endX = pgm_read_byte(&frame14[i + 2]);
display.drawFastHLine(startX, y, endX, SSD1306_WHITE);
}
display.display(); // Send the buffer to the OLED
}

const uint8_t frame15[] PROGMEM = {
  0, 115, 7,  1, 113, 7,  2, 111, 7,  3, 109, 7,  4, 107, 7,  5, 105, 7,  6, 103, 7,  7, 101, 7,  8, 100, 6,  9, 98, 6,  10, 96, 6,  11, 93, 7,  12, 91, 7,  13, 89, 7,  14, 87, 7,  15, 84, 8,  16, 81, 8,  17, 78, 9,  18, 74, 10,  19, 70, 12,  20, 66, 12,  21, 62, 13,  22, 59, 11,  23, 55, 11,  24, 52, 10,  25, 49, 10,  26, 48, 7,  27, 47, 5,  28, 46, 4,  29, 46, 3,  29, 127, 1,  30, 45, 4,  30, 121, 7,  31, 45, 3,  31, 118, 10,  32, 45, 3,  32, 115, 11,  33, 45, 3,  33, 114, 7,  34, 45, 3,  34, 113, 5,  35, 45, 3,  35, 111, 5,  36, 45, 3,  36, 110, 5,  37, 45, 3,  37, 109, 4,  38, 45, 3,  38, 107, 5,  39, 45, 3,  39, 106, 5,  40, 46, 3,  40, 105, 5,  41, 46, 3,  41, 103, 5,  42, 46, 3,  42, 101, 6,  43, 46, 3,  43, 100, 5,  44, 47, 3,  44, 98, 6,  45, 47, 3,  45, 96, 6,  46, 47, 3,  46, 94, 6,  47, 47, 3,  47, 92, 6,  48, 48, 3,  48, 89, 7,  49, 48, 3,  49, 87, 7,  50, 48, 3,  50, 84, 8,  51, 48, 3,  51, 82, 8,  52, 48, 4,  52, 79, 8,  53, 46, 6,  53, 77, 8,  54, 45, 7,  54, 75, 7,  55, 43, 9,  55, 72, 8,  56, 41, 6,  56, 50, 3,  56, 70, 7,  57, 34, 3,  57, 39, 8,  57, 50, 3,  57, 67, 8,  58, 32, 11,  58, 44, 3,  58, 50, 3,  58, 64, 9,  59, 30, 12,  59, 45, 3,  59, 51, 3,  59, 61, 9,  60, 28, 7,  60, 36, 4,  60, 45, 3,  60, 51, 4,  60, 58, 9,  61, 14, 6,  61, 25, 8,  61, 36, 3,  61, 45, 4,  61, 51, 14,  62, 13, 18,  62, 37, 3,  62, 46, 16,  63, 12, 16,  63, 37, 3,  63, 47, 7,  63, 55, 3,  255 // End of data marker
};
void displayFrame15() {
display.clearDisplay();
 for (uint16_t i = 0; i < sizeof(frame15); i += 3) {
uint8_t y = pgm_read_byte(&frame15[i]);
if (y == 255) {break;} // End of data marker
uint8_t startX = pgm_read_byte(&frame15[i + 1]);
uint8_t endX = pgm_read_byte(&frame15[i + 2]);
display.drawFastHLine(startX, y, endX, SSD1306_WHITE);
}
display.display(); // Send the buffer to the OLED
}

void (*functionArray[])() = {displayFrame0,displayFrame1,displayFrame2,displayFrame3,displayFrame4,displayFrame5,displayFrame6,displayFrame7,displayFrame8,displayFrame9,displayFrame10,displayFrame11,displayFrame12,displayFrame13,displayFrame14,displayFrame15,};

int totalFrames = 16;
